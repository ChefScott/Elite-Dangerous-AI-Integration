name: Build and Test Executable on linux

on: [push, pull_request]

jobs:
  pyinstaller-build:
    name: Build Executable
    runs-on: ubuntu-24.04
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          sudo apt-get install portaudio19-dev
          python -m pip install --upgrade pip setuptools
          python -m pip install --force-reinstall -r requirements.txt
          python -m pip install --force-reinstall numpy==2.2.2 opencv-python==4.10.0.84

      - name: Run tests
        uses: GabrielBB/xvfb-action@v1
        with:
          run: |
            python -m pytest --timeout 10 test -v --capture=no

      - name: Install pyinstaller
        run: |
          python -m pip install pyinstaller@git+https://github.com/pyinstaller/pyinstaller.git@0d562b5

      - name: Determine paths for dependencies
        id: determine_paths
        run: |
          export VAD_MODEL=$(python3 -c 'import os, pysilero_vad; print(os.path.join(os.path.dirname(pysilero_vad.__file__), "models", "silero_vad.onnx"))')
          export VEC_EXTENSION=$(python3 -c 'import os, sqlite_vec; print(os.path.join(os.path.dirname(sqlite_vec.__file__), "vec0.so"))')
          echo "VAD_MODEL=$VAD_MODEL" >> $GITHUB_ENV
          echo "VEC_EXTENSION=$VEC_EXTENSION" >> $GITHUB_ENV

      - name: Create Executable for Chat
        uses: GabrielBB/xvfb-action@v1
        with:
          run: >-
            pyinstaller ./src/Chat.py -y --onedir --clean --console --add-data ./src:. --add-binary ${{ env.VAD_MODEL }}:./pysilero_vad/models --add-binary ${{ env.VEC_EXTENSION }}:./sqlite_vec

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: COVAS_NEXT_v${{ github.sha }}_linux
          path: ./dist
        # output the upload URL for later use
        id: upload-artifact

  electron-build:
    name: Build Electron App
    needs: pyinstaller-build
    runs-on: ubuntu-24.04
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: COVAS_NEXT_v${{ github.sha }}_linux
          path: dist

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "npm"
          cache-dependency-path: ui/package-lock.json

      #- name: Install Rust stable
      #  uses: dtolnay/rust-toolchain@stable

      - name: Install system libraries
        run: |
          sudo apt update
          sudo apt install libwebkit2gtk-4.1-dev build-essential curl wget file libxdo-dev libssl-dev libayatana-appindicator3-dev librsvg2-dev

      #- name: Rust cache
      #  uses: swatinem/rust-cache@v2
      #  with:
      #    workspaces: "./src-tauri -> target"

      - name: Install electron dependencies
        working-directory: .
        run: npm run install:electron

      - name: Install frontend dependencies
        working-directory: .
        run: npm run install:ui

      - name: Replace Commit HASH in environment.prod.ts
        working-directory: ui
        run: |
          sed -i "s/__COMMIT_HASH_PLACEHOLDER__/${{ github.sha }}/g" src/environments/environment.prod.ts

      #- name: Set Tauri version
      #  working-directory: ui
      #  run: |
      #    SHORT_HASH=$(echo ${{ github.sha }} | cut -c1-7)
      #    npx tauri-version "0.0.0-$SHORT_HASH"
      #    echo "Using version: 0.0.0-$SHORT_HASH"

      - name: Build UI
        working-directory: .
        run: npm run build:ui
        env:
          COMMIT_HASH: ${{ github.sha }}

      - name: Build Electron App
        run: npm run package:dir

      - name: Upload tauri app zip file
        uses: actions/upload-artifact@v4
        with:
          name: COVAS_NEXT_ELECTRON_v${{ github.sha }}_linux
          path: ./dist/linux-unpacked/*

  flatpak-bundle:
    name: Build Flatpak Bundle
    needs: electron-build
    runs-on: ubuntu-24.04
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: COVAS_NEXT_ELECTRON_v${{ github.sha }}_linux
          path: dist/linux-unpacked

      - name: Install flatpak
        run: |
          sudo apt update
          sudo apt install -y flatpak flatpak-builder

      - name: Setup flatpak remotes and runtimes
        run: |
          # Add flathub repo
          sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
          flatpak --user remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo

          # Install runtimes system-wide to avoid permission issues
          sudo flatpak install -y flathub org.freedesktop.Platform//23.08
          sudo flatpak install -y flathub org.freedesktop.Sdk//23.08

      - name: Build flatpak
        run: |
          SHORT_HASH=$(echo ${{ github.sha }} | cut -c1-7)
          # Create build directory
          mkdir -p flatpak-build

          # Verify flatpak manifest exists
          ls -la com.covasnext.ui.yml

          # Build the flatpak with verbose output
          sudo flatpak-builder --verbose --force-clean --install-deps-from=flathub \
            --repo=flatpak-repo flatpak-build com.covasnext.ui.yml

          # Create flatpak bundle
          sudo flatpak build-bundle flatpak-repo covas-next-ui-$SHORT_HASH.flatpak \
            com.covasnext.ui --runtime-repo=https://flathub.org/repo/flathub.flatpakrepo

          # Fix permissions for the bundle
          sudo chown $USER covas-next-ui-$SHORT_HASH.flatpak

          # Verify the bundle was created
          ls -la covas-next-ui-*.flatpak
          echo "Flatpak bundle created successfully: covas-next-ui-$SHORT_HASH.flatpak"

      - name: Validate flatpak bundle
        run: |
          SHORT_HASH=$(echo ${{ github.sha }} | cut -c1-7)
          # Install the bundle locally to test it
          flatpak install --user --bundle covas-next-ui-$SHORT_HASH.flatpak -y

          # Check if the app was installed correctly
          flatpak list --user | grep com.covasnext.ui

          # Get app info
          flatpak info --user com.covasnext.ui

          echo "Flatpak bundle validation completed successfully"

      - name: Upload flatpak bundle
        uses: actions/upload-artifact@v4
        with:
          name: COVAS_NEXT_FLATPAK_v${{ github.sha }}_linux
          path: covas-next-ui-*.flatpak

  e2e-and-scan:
    name: E2E Tests & Defender Scan
    runs-on: ubuntu-latest
    needs: pyinstaller-build
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: COVAS_NEXT_v${{ github.sha }}_linux
          path: dist

      - name: Run e2e tests
        uses: GabrielBB/xvfb-action@v1
        with:
          run: |
            python --version
            chmod +x ./dist/Chat/Chat
            python e2e/test_ChatExecutable.py
